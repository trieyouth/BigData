package com.zero.service;


import java.util.List;








import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;





import org.w3c.dom.DOMException;

import com.zero.entity.CreditTemplateAllInfo;
import com.zero.entity.Creditanalysistemplatecontext;
import com.zero.entity.Templatedata;
import com.zero.entity.Templateuser;
import com.zero.dao.AdminuserDAO;
import com.zero.dao.CreditanalysistemplatecontextDAO;
import com.zero.dao.TemplatedataDAO;
import com.zero.dao.TemplateuserDAO;
import com.zero.service.LogService;




@Service
public class TemplatService {
	@Autowired
	private TemplatedataDAO templateDataDao;
	@Autowired
	private TemplateuserDAO templateUserDAO;
	
	
	private Creditanalysistemplatecontext creditanalysistemplatecontext=new Creditanalysistemplatecontext();
	
	
	private Templatedata templatedata=new Templatedata();
	
	@Autowired
	private AdminuserDAO adminuserDao;
	@Autowired
	private LogService logservice;
	@Autowired
	private CreditanalysistemplatecontextDAO creditanalysistemplatecontextDAO;
	
	public int adminID;
	public int templateID;
	public TemplatService() {
		
	}

	/**
	 * 查询模板列表
	 * 
	 * @return 返回一个list
	 */
	public List<Templatedata> checkTotalCreditTemplate() {
		return templateDataDao.findAll();
	}

	public List<Templatedata> getUserList() {
		return templateDataDao.findAll();
	}
	
	/**
	 * 根据模板id查询
	 * 
	 * @param templateID
	 * @return
	 */
	public List<Templatedata> checkUseDetailCreditTemplate(String templateID) {
		return templateDataDao.findByProperty("tempId", templateID);
	}

	/**
	 * 插入一个模板
	 * 
	 * @param templateData
	 */
	public void insertTemplateData(Templatedata templateData,Creditanalysistemplatecontext tempCreditTemplateAllInfo) 
	{
		templateDataDao.save(templateData);
		List<Templatedata> temp = templateDataDao.findByAdminId(templateData.getAdminId());
		logservice.saveTemplateLog(adminID, temp.get(temp.size()-1).getTempId());
		tempCreditTemplateAllInfo.setTemplateId(temp.get(temp.size()-1).getTempId());
		System.out.println("afsasfawf"+tempCreditTemplateAllInfo.getTemplateId());
		creditanalysistemplatecontextDAO.save(tempCreditTemplateAllInfo);
	}

	/**
	 * 删除一个模板
	 * 
	 * @param templateData
	 */
	public void deleteTemplateData(Templatedata templateData) {
		templateDataDao.delete(templateData);
		logservice.deleteTemplateLog(adminID, templateID);
	}

	/**
	 * 根据模板id删除一个模板
	 * 
	 * @param templateData
	 */
	public void deleteTemplateDataByID(String TempId) {
		templatedata.setTempId(Integer.parseInt(TempId));
		templateDataDao.delete(templatedata);
		//templateDataDao.deleteTempId(TempId);
		creditanalysistemplatecontext.setTemplateId(Integer.parseInt(TempId));
		creditanalysistemplatecontextDAO.delete(creditanalysistemplatecontext);
		//creditanalysistemplatecontextDAO.deleteTempId(TempId);
		logservice.deleteTemplateLog(adminID, Integer.parseInt(TempId));
	}

	/**
	 * 删除一个模板
	 * 
	 * @param tempId
	 * @param adminId
	 */
	public void deleteTemplateUserByID(int tempId, int adminId) {
		templateUserDAO.deleteTempId(tempId, adminId);
		logservice.deleteTemplateLog(adminID, templateID);
	}

	/**
	 * 保存模板
	 * 
	 * @param templateUser
	 */
	public void useTemplateUser(Templateuser templateUser) {
		templateUserDAO.save(templateUser);
		List<Templateuser> temp = templateUserDAO.findByDataNumber(templateUser.getDataNumber());
		logservice.useTemplateLog(adminID, temp.get(temp.size()-1).getId().getTempId());
	}

	/**
	 * 删除模板
	 * 
	 * @param templateUser
	 */
	public void deleteTemplateUser(String templateID,String adminID) {
		templateUserDAO.deleteByAuthId(Integer.parseInt(templateID),Integer.parseInt(adminID));
		logservice.deleteTemplateLog(Integer.parseInt(adminID), Integer.parseInt(templateID));
	}

}
