package com.zero.controller.ccas;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.zero.entitylib.PersonalCredit;
import com.zero.entitylib.PersonalDetail;
import com.zero.entity.PersonalCreditQuery;
import com.zero.entity.Singleusercreditinformation;
import com.zero.service.HiveQueryService;

@RequestMapping("/ccas/index/clientPortray")
@Controller
public class CCASClientPortrayController {
	
	@RequestMapping(value="/personalCreditQuery",method=RequestMethod.GET)
	public String personalCreditQuery(){
		return "client-credit-analyse-system/client-portray/PersonalCreditQuery";
	}
	
	@RequestMapping(value="/personalCreditQuery",method=RequestMethod.POST)
	public String personalCreditQuery(Singleusercreditinformation sis,Model model){      
		
		System.out.println("Age==== "+sis.getAge());
		///////根据输入的信息进行Hive的查询 ///////
		String str=PersonalCreditQueryByCardPost("10",model);
		
		System.out.println(str);
		if(str.equals("client-credit-analyse-system/client-portray/PersonalCreditModel"))	
		{
			return "client-credit-analyse-system/client-portray/PersonalCreditModel";
		}
		return "client-credit-analyse-system/client-portray/PersonalCreditQuery";
	}
	
	
	@RequestMapping(value="/personalCreditQueryByCard",method=RequestMethod.GET)
	public String PersonalCreditQueryByCardGet(Model model){
		model.addAttribute("queryResult", "");
		return "client-credit-analyse-system/client-portray/PersonalCreditQueryByCard";
	}
	
	String pId="";
	@RequestMapping(value="/personalCreditQueryByCard",method=RequestMethod.POST)
	public String PersonalCreditQueryByCardPost(String Id,Model model){
        pId=Id;
		System.out.println("Id ====== "+Id);
		if( Id !="" && Id!=null )
		{
			List<String> list = new ArrayList<String>();
			list.clear();
			HiveQueryService hqs=new HiveQueryService();
			List<String> lt = new ArrayList<String>();
			lt.clear();
			try {
				list=hqs.getInfoByCardnums(Id);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(list.size()>0)
			{
				String score=list.get(50);
				System.out.println("score:"+score);
				int level=Integer.parseInt(score)*4;
				String ss="AAA";
				if(level>300 && level<=350) {ss="AA";}
				else if(level>250 && level<=300) {ss="A";}
				else if(level>200 && level<=250) {ss="BBB";}
				else if(level>150 && level<=200) {ss="BB";}
				else if(level>100 && level<=150) {ss="B";}
				else if(level>50 && level<=100) {ss="CCC";}
				else if(level>0 && level<=50) {ss="CC";}
				else if(level<=0) {ss="C";}
				int loan=(int)(Integer.parseInt(score)*500*1.0);
				if(loan>=500000) {loan=500000;}
				String str="<h3><br>尊敬的"+Id+":<br>您的信用得分为："+score+"<br>"+"信用等级为："+ ss+"<br>"+"最高贷款金额为："+loan+"元</h3><br>";
				System.out.println(str);
				lt.add(Id);
				lt.add(level+"");
				lt.add(ss);
				lt.add(loan+"");
				model.addAttribute("queryResult", lt);
			}
			return "client-credit-analyse-system/client-portray/PersonalCreditModel";
		}
		return "client-credit-analyse-system/client-portray/PersonalCreditQueryByCard";
	}
	
	@RequestMapping(value="/checkCreditLevel")
	public String checkCreditLevel(){
		return "client-credit-analyse-system/client-portray/checkCreditLevel";
	}
	
	/**
	 * 【PersonalCreditQueryByCard.jsp】根据Id查询数据
	 *   跳转界面【PersonalCreditModel.jsp】 
	 * */
	@RequestMapping(value="/personalCreditModelDetail",method=RequestMethod.GET)
	public String QueryById(Model model)
	{
//		System.out.println("+++++Id=======:");
		HiveQueryService hqs=new HiveQueryService();
		List<String> list=new ArrayList<String>();
		list.clear();
		try {

			list=hqs.getInfoByCardnums(pId);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		model.addAttribute("list", list);
		return "client-credit-analyse-system/client-portray/PersonalCreditModelDetail";
	}

    /***
     * 【PersonalCreditQuery.jsp】根据Id查询数据
     * 
     * */
	//@RequestMapping(value="/personalCreditQuery",method=RequestMethod.GET)
	public String LoadPersonalCreditQuery(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException 
	{
		return "";
	}
	
	//@RequestMapping(value="/personalCreditQuery",method=RequestMethod.POST)
	public String PersonalCreditQuery(HttpServletRequest request, HttpServletResponse response)
	{
		System.out.println("btnPersonalCreditQuery:*****************");
		return "client-credit-analyse-system/client-portray/PersonalCreditQueryCrowd";
   }

	/***
	 * 【Kreditlinien.jsp】显示最高贷款金额和等级图片
	 * */
	public void QueryFee(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException 
	{
		String Id=request.getParameter("txtFeeID");
		String btnQueryFee=request.getParameter("btnQueryFee");
		if(Id!=null && Id!="")
		{
			List<String> lt=null;
			HiveQueryService hqs=new HiveQueryService();
			try {

				lt=hqs.getInfoByCardnums(Id);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			if(lt.size()>0)
			{
				String score=lt.get(50);
				int level=Integer.parseInt(score)/10;
				int loan=(int)(Integer.parseInt(score)*5000*1.0/10);
				if(loan>=50000) {loan=50000;}
				String str="<h3><br>最高贷款金额为："+loan+"元</h3><br>";
				request.setAttribute("PersonalCreditModel", loan);
				int ss=0;
				if(level>=9){ss=5;}
				else if(level>=7 && level<9) {ss=4;}
				else if(level>=4 && level<7) {ss=3;}
				else if(level>=1 && level<4) {ss=2;}
				else {ss=1;}
				String strSrc="WebView//images//"+ss+".png";
				request.setAttribute("PersonalCreditSrc", strSrc);
			}
			request.getRequestDispatcher("WebView/ClientCreditAnalyseSystem/ClientPortray/Kreditlinien.jsp").forward(request, response);
		}
	}
}
